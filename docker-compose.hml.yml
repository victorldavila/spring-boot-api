version: "3.8"
services:
  mongodb:
    image: mongo:5.0.9
    container_name: hml-mongodb
    hostname: mongodb-host
    restart: always
    env_file:
      - .env
    environment:
      - MONGO_INITDB_DATABASE=$MONGO_INITDB_DATABASE
      - MONGO_INITDB_ROOT_USERNAME=$MONGO_INITDB_ROOT_USERNAME
      - MONGO_INITDB_ROOT_PASSWORD=$MONGO_INITDB_ROOT_PASSWORD
    ports:
      - "27017:27017"
    networks:
      - finapp-net
    volumes:
      - ./mongodb:/data/db

  api:
    build:
      context: ./
      dockerfile: Dockerfile-api
    container_name: hml-api
    restart: always
    image: dexpay:0.0.1
    hostname: dexpay-api
    ports:
      - "8080:8080"
    depends_on:
      - mongodb
    networks:
      - finapp-net
    env_file:
      - .env
    environment:
      - mongo_data_base=$MONGO_INITDB_DATABASE
      - mongo_user_name=$MONGO_INITDB_ROOT_USERNAME
      - mongo_password=$MONGO_INITDB_ROOT_PASSWORD
      - mongo_host=mongodb-host
      - mongo_port=27017

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    network_mode: host
    volumes:
      - ./env/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana
    container_name: grafana
    network_mode: host
    ports:
      - "3000:3000"
    env_file:
      - ./env/grafana.env

  zookeeper:
    image: confluentinc/cp-zookeeper:6.2.0
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "22181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:6.2.0
    hostname: broker
    container_name: broker
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
  kafdrop:
    image: obsidiandynamics/kafdrop
    restart: "no"
    ports:
      - "9007:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka:29092"
      JVM_OPTS: "-Xms16M -Xmx48M -Xss180K -XX:-TieredCompilation -XX:+UseStringDeduplication -noverify"
    depends_on:
      - "kafka"

networks:
  finapp-net:
    driver: bridge