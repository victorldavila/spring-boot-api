version: "3.8"
services:
  database:
    container_name: database
    hostname: mongodb-host
    env_file:
      - .env
    build:
      context: ./
      dockerfile: Dockerfile-db
      args:
        - DATABASE=$MONGO_DATABASE
        - USERNAME=$MONGO_USERNAME
        - PASSWORD=$MONGO_PASSWORD
    #restart: on-failure
    ports:
      - "27017:27017"
    networks:
      - dexpay-net

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.4
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "22181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.4.4
    hostname: broker
    container_name: broker
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
#      - "9092:9092"
#      - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

#  kafdrop:
#    image: obsidiandynamics/kafdrop
#    restart: "no"
#    ports:
#      - "9007:9000"
#    environment:
#      KAFKA_BROKERCONNECT: "kafka:29092"
#      JVM_OPTS: "-Xms16M -Xmx48M -Xss180K -XX:-TieredCompilation -XX:+UseStringDeduplication -noverify"
#    depends_on:
#      - "kafka"

  api:
    build:
      context: ./
      dockerfile: Dockerfile-api
    container_name: api
    #restart: always
    ports:
      - "8081:8080"
    depends_on:
      - database
    networks:
      - dexpay-net
    env_file:
      - .env
    environment:
      - mongo_data_base=$MONGO_INITDB_DATABASE
      - mongo_user_name=$MONGO_INITDB_ROOT_USERNAME
      - mongo_password=$MONGO_INITDB_ROOT_PASSWORD
      - mongo_uri=$MONGO_ADMIN_DATABASE_URI

networks:
  dexpay-net:
    driver: bridge