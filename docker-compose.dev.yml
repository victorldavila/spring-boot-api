version: "3.8"
services:
  database:
    container_name: database
    hostname: mongodb-host
    env_file:
      - .env
    build:
      context: ./
      dockerfile: Dockerfile-db
      args:
        - DATABASE=$MONGO_DATABASE
        - USERNAME=$MONGO_USERNAME
        - PASSWORD=$MONGO_PASSWORD
    #restart: on-failure
    ports:
      - 27017:27017
    networks:
      - dexpay-net

  zookeeper:
    image: confluentinc/cp-zookeeper:5.5.3
    hostname: zookeeper
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: "2181"
      ZOOKEEPER_TICK_TIME: "2000"
      ZOOKEEPER_SERVERS: "zookeeper:22888:23888"
    ports:
      - 2181:2181
  kafka:
    image: confluentinc/cp-kafka:5.5.3
    hostname: kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,PLAINTEXT_UI:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://kafka:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_BROKER_ID: 1
      KAFKA_BROKER_RACK: "r1"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    ports:
      - 9092:9092
      - 29092:29092

  kafka-rest-proxy:
    image: confluentinc/cp-kafka-rest:5.5.3
    hostname: kafka-rest-proxy
    environment:
      KAFKA_REST_LISTENERS: http://0.0.0.0:8082/
      KAFKA_REST_SCHEMA_REGISTRY_URL: http://schema-registry:8081/
      KAFKA_REST_HOST_NAME: kafka-rest-proxy
      KAFKA_REST_ZOOKEEPER_CONNECT: zookeeper:2181
    ports:
      - 8082:8082

  kafka-topics-ui:
    image: landoop/kafka-topics-ui:0.9.4
    hostname: kafka-topics-ui
    depends_on:
      - kafka-rest-proxy
    environment:
      KAFKA_REST_PROXY_URL: "http://kafka-rest-proxy:8082/"
      PROXY: "true"
    ports:
      - 8098:8000

  init-kafka:
    image: confluentinc/cp-kafka:7.4.4
    depends_on:
      - kafka
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "
      # blocks until kafka is reachable
      kafka-topics --bootstrap-server kafka:29092 --list

      echo -e 'Creating kafka topics'
      kafka-topics --bootstrap-server kafka:29092 --create --if-not-exists --topic product-topic --replication-factor 1 --partitions 1
      kafka-topics --bootstrap-server kafka:29092 --create --if-not-exists --topic multi-name-topic --replication-factor 1 --partitions 1
      kafka-topics --bootstrap-server kafka:29092 --create --if-not-exists --topic multi-quantity-topic --replication-factor 1 --partitions 1

      echo -e 'Successfully created the following topics:'
      kafka-topics --bootstrap-server kafka:29092 --list
      "

  api:
    build:
      context: ./
      dockerfile: Dockerfile-api
    container_name: api
    #restart: always
    ports:
      - 8080:8081
    depends_on:
      - database
      - kafka
    networks:
      - dexpay-net
    env_file:
      - .env
    environment:
      - mongo_data_base=$MONGO_INITDB_DATABASE
      - mongo_user_name=$MONGO_INITDB_ROOT_USERNAME
      - mongo_password=$MONGO_INITDB_ROOT_PASSWORD
      - mongo_uri=$MONGO_ADMIN_DATABASE_URI

networks:
  dexpay-net:
    driver: bridge